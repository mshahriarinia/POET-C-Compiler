#include <atlas_prefetch.h>

void ATL_zger2_a1_x1_yX(const int M,const int N,const double* alpha,const double* X,const int incX,const double* Y,const int incY,const double* beta,const double* W,int incW,const double* Z,int incZ,double *A,const int lda) 
{
   int i,j;
   double _w_buf_0;
   double _w_buf_1;
   double _z_buf_0_0;
   double _z_buf_0_1;
   double _z_buf_1_0;
   double _z_buf_1_1;
   double _z_buf_2_0;
   double _z_buf_2_1;
   double _z_buf_3_0;
   double _z_buf_3_1;
   double _x_buf_0;
   double _x_buf_1;
   double _y_buf_0_0;
   double _y_buf_0_1;
   double _y_buf_1_0;
   double _y_buf_1_1;
   double _y_buf_2_0;
   double _y_buf_2_1;
   double _y_buf_3_0;
   double _y_buf_3_1;
   double _w_buf_1__split;
   double _w_buf_0__split;
   double _x_buf_1__split;
   double _x_buf_0__split;
   double* _pA_0;
   double* _pA_1;
   double* _pA_2;
   double* _pA_3;
   double* _pA_0_0;
   double* _pA_1_0;
   double* _pA_2_0;
   double* _pA_3_0;
   double* _pX_0;
   double* _pY_0;
   double* _pY_1;
   double* _pY_2;
   double* _pY_3;
   const double* _prefA_0;
   const double* _prefA_0_0;
   _pA_0 = A;
   _pA_1 = _pA_0+lda;
   _pA_2 = _pA_1+lda;
   _pA_3 = _pA_2+lda;
   _pY_0 = Y;
   _pY_1 = _pY_0+incY;
   _pY_2 = _pY_1+incY;
   _pY_3 = _pY_2+incY;
   _prefA_0 = A+4*lda;
   for (j=0; j<-3+2*N; j+=4) 
     {
        _y_buf_0_0 = *(_pY_0);
        _y_buf_0_1 = *(1+_pY_0);
        _y_buf_1_0 = *(_pY_1);
        _y_buf_1_1 = *(1+_pY_1);
        _y_buf_2_0 = *(_pY_2);
        _y_buf_2_1 = *(1+_pY_2);
        _y_buf_3_0 = *(_pY_3);
        _y_buf_3_1 = *(1+_pY_3);
        _z_buf_0_0 = *(Z+j*incZ);
        _z_buf_0_1 = *(Z+(1+j*incZ));
        _z_buf_1_0 = *(Z+(j*incZ+incZ));
        _z_buf_1_1 = *(Z+(1+(j*incZ+incZ)));
        _z_buf_2_0 = *(Z+(j*incZ+2*incZ));
        _z_buf_2_1 = *(Z+(1+(j*incZ+2*incZ)));
        _z_buf_3_0 = *(Z+(j*incZ+3*incZ));
        _z_buf_3_1 = *(Z+(1+(j*incZ+3*incZ)));
        _pA_0_0 = _pA_0;
        _pA_1_0 = _pA_1;
        _pA_2_0 = _pA_2;
        _pA_3_0 = _pA_3;
        _pX_0 = X;
        _prefA_0_0 = _prefA_0;
        for (i=0; i<-11+2*M; i+=12) 
          {
             ATL_pfl1R(_prefA_0_0);
             _prefA_0_0 = 12+_prefA_0_0;
             _x_buf_0 = *(_pX_0);
             _x_buf_1 = *(1+_pX_0);
             _w_buf_0 = *(W+i);
             _w_buf_1 = *(W+(1+i));
             _w_buf_1__split = _w_buf_1*_z_buf_0_1;
             _w_buf_0__split = _w_buf_0*_z_buf_0_0;
             _x_buf_1__split = _x_buf_1*_y_buf_0_1;
             _x_buf_0__split = _x_buf_0*_y_buf_0_0;
             *(_pA_0_0) = -_w_buf_1__split+(-_x_buf_1__split+(_w_buf_0__split+(*(_pA_0_0)+_x_buf_0__split)));
             _w_buf_1__split = _w_buf_1*_z_buf_0_0;
             _w_buf_0__split = _w_buf_0*_z_buf_0_1;
             _x_buf_1__split = _x_buf_1*_y_buf_0_0;
             _x_buf_0__split = _x_buf_0*_y_buf_0_1;
             *(1+_pA_0_0) = _w_buf_1__split+(_x_buf_1__split+(_w_buf_0__split+(*(1+_pA_0_0)+_x_buf_0__split)));
             _w_buf_1__split = _w_buf_1*_z_buf_2_1;
             _w_buf_0__split = _w_buf_0*_z_buf_2_0;
             _x_buf_1__split = _x_buf_1*_y_buf_2_1;
             _x_buf_0__split = _x_buf_0*_y_buf_2_0;
             *(_pA_2_0) = -_w_buf_1__split+(-_x_buf_1__split+(_w_buf_0__split+(*(_pA_2_0)+_x_buf_0__split)));
             _w_buf_1__split = _w_buf_1*_z_buf_2_0;
             _w_buf_0__split = _w_buf_0*_z_buf_2_1;
             _x_buf_1__split = _x_buf_1*_y_buf_2_0;
             _x_buf_0__split = _x_buf_0*_y_buf_2_1;
             *(1+_pA_2_0) = _w_buf_1__split+(_x_buf_1__split+(_w_buf_0__split+(*(1+_pA_2_0)+_x_buf_0__split)));
             _x_buf_0 = *(2+_pX_0);
             _x_buf_1 = *(3+_pX_0);
             _w_buf_0 = *(W+(2+i));
             _w_buf_1 = *(W+(3+i));
             _w_buf_1__split = _w_buf_1*_z_buf_0_1;
             _w_buf_0__split = _w_buf_0*_z_buf_0_0;
             _x_buf_1__split = _x_buf_1*_y_buf_0_1;
             _x_buf_0__split = _x_buf_0*_y_buf_0_0;
             *(2+_pA_0_0) = -_w_buf_1__split+(-_x_buf_1__split+(_w_buf_0__split+(*(2+_pA_0_0)+_x_buf_0__split)));
             _w_buf_1__split = _w_buf_1*_z_buf_0_0;
             _w_buf_0__split = _w_buf_0*_z_buf_0_1;
             _x_buf_1__split = _x_buf_1*_y_buf_0_0;
             _x_buf_0__split = _x_buf_0*_y_buf_0_1;
             *(3+_pA_0_0) = _w_buf_1__split+(_x_buf_1__split+(_w_buf_0__split+(*(3+_pA_0_0)+_x_buf_0__split)));
             _w_buf_1__split = _w_buf_1*_z_buf_2_1;
             _w_buf_0__split = _w_buf_0*_z_buf_2_0;
             _x_buf_1__split = _x_buf_1*_y_buf_2_1;
             _x_buf_0__split = _x_buf_0*_y_buf_2_0;
             *(2+_pA_2_0) = -_w_buf_1__split+(-_x_buf_1__split+(_w_buf_0__split+(*(2+_pA_2_0)+_x_buf_0__split)));
             _w_buf_1__split = _w_buf_1*_z_buf_2_0;
             _w_buf_0__split = _w_buf_0*_z_buf_2_1;
             _x_buf_1__split = _x_buf_1*_y_buf_2_0;
             _x_buf_0__split = _x_buf_0*_y_buf_2_1;
             *(3+_pA_2_0) = _w_buf_1__split+(_x_buf_1__split+(_w_buf_0__split+(*(3+_pA_2_0)+_x_buf_0__split)));
             _x_buf_0 = *(4+_pX_0);
             _x_buf_1 = *(5+_pX_0);
             _w_buf_0 = *(W+(4+i));
             _w_buf_1 = *(W+(5+i));
             _w_buf_1__split = _w_buf_1*_z_buf_0_1;
             _w_buf_0__split = _w_buf_0*_z_buf_0_0;
             _x_buf_1__split = _x_buf_1*_y_buf_0_1;
             _x_buf_0__split = _x_buf_0*_y_buf_0_0;
             *(4+_pA_0_0) = -_w_buf_1__split+(-_x_buf_1__split+(_w_buf_0__split+(*(4+_pA_0_0)+_x_buf_0__split)));
             _w_buf_1__split = _w_buf_1*_z_buf_0_0;
             _w_buf_0__split = _w_buf_0*_z_buf_0_1;
             _x_buf_1__split = _x_buf_1*_y_buf_0_0;
             _x_buf_0__split = _x_buf_0*_y_buf_0_1;
             *(5+_pA_0_0) = _w_buf_1__split+(_x_buf_1__split+(_w_buf_0__split+(*(5+_pA_0_0)+_x_buf_0__split)));
             _w_buf_1__split = _w_buf_1*_z_buf_2_1;
             _w_buf_0__split = _w_buf_0*_z_buf_2_0;
             _x_buf_1__split = _x_buf_1*_y_buf_2_1;
             _x_buf_0__split = _x_buf_0*_y_buf_2_0;
             *(4+_pA_2_0) = -_w_buf_1__split+(-_x_buf_1__split+(_w_buf_0__split+(*(4+_pA_2_0)+_x_buf_0__split)));
             _w_buf_1__split = _w_buf_1*_z_buf_2_0;
             _w_buf_0__split = _w_buf_0*_z_buf_2_1;
             _x_buf_1__split = _x_buf_1*_y_buf_2_0;
             _x_buf_0__split = _x_buf_0*_y_buf_2_1;
             *(5+_pA_2_0) = _w_buf_1__split+(_x_buf_1__split+(_w_buf_0__split+(*(5+_pA_2_0)+_x_buf_0__split)));
             _x_buf_0 = *(6+_pX_0);
             _x_buf_1 = *(7+_pX_0);
             _w_buf_0 = *(W+(6+i));
             _w_buf_1 = *(W+(7+i));
             _w_buf_1__split = _w_buf_1*_z_buf_0_1;
             _w_buf_0__split = _w_buf_0*_z_buf_0_0;
             _x_buf_1__split = _x_buf_1*_y_buf_0_1;
             _x_buf_0__split = _x_buf_0*_y_buf_0_0;
             *(6+_pA_0_0) = -_w_buf_1__split+(-_x_buf_1__split+(_w_buf_0__split+(*(6+_pA_0_0)+_x_buf_0__split)));
             _w_buf_1__split = _w_buf_1*_z_buf_0_0;
             _w_buf_0__split = _w_buf_0*_z_buf_0_1;
             _x_buf_1__split = _x_buf_1*_y_buf_0_0;
             _x_buf_0__split = _x_buf_0*_y_buf_0_1;
             *(7+_pA_0_0) = _w_buf_1__split+(_x_buf_1__split+(_w_buf_0__split+(*(7+_pA_0_0)+_x_buf_0__split)));
             _w_buf_1__split = _w_buf_1*_z_buf_2_1;
             _w_buf_0__split = _w_buf_0*_z_buf_2_0;
             _x_buf_1__split = _x_buf_1*_y_buf_2_1;
             _x_buf_0__split = _x_buf_0*_y_buf_2_0;
             *(6+_pA_2_0) = -_w_buf_1__split+(-_x_buf_1__split+(_w_buf_0__split+(*(6+_pA_2_0)+_x_buf_0__split)));
             _w_buf_1__split = _w_buf_1*_z_buf_2_0;
             _w_buf_0__split = _w_buf_0*_z_buf_2_1;
             _x_buf_1__split = _x_buf_1*_y_buf_2_0;
             _x_buf_0__split = _x_buf_0*_y_buf_2_1;
             *(7+_pA_2_0) = _w_buf_1__split+(_x_buf_1__split+(_w_buf_0__split+(*(7+_pA_2_0)+_x_buf_0__split)));
             _x_buf_0 = *(8+_pX_0);
             _x_buf_1 = *(9+_pX_0);
             _w_buf_0 = *(W+(8+i));
             _w_buf_1 = *(W+(9+i));
             _w_buf_1__split = _w_buf_1*_z_buf_0_1;
             _w_buf_0__split = _w_buf_0*_z_buf_0_0;
             _x_buf_1__split = _x_buf_1*_y_buf_0_1;
             _x_buf_0__split = _x_buf_0*_y_buf_0_0;
             *(8+_pA_0_0) = -_w_buf_1__split+(-_x_buf_1__split+(_w_buf_0__split+(*(8+_pA_0_0)+_x_buf_0__split)));
             _w_buf_1__split = _w_buf_1*_z_buf_0_0;
             _w_buf_0__split = _w_buf_0*_z_buf_0_1;
             _x_buf_1__split = _x_buf_1*_y_buf_0_0;
             _x_buf_0__split = _x_buf_0*_y_buf_0_1;
             *(9+_pA_0_0) = _w_buf_1__split+(_x_buf_1__split+(_w_buf_0__split+(*(9+_pA_0_0)+_x_buf_0__split)));
             _w_buf_1__split = _w_buf_1*_z_buf_2_1;
             _w_buf_0__split = _w_buf_0*_z_buf_2_0;
             _x_buf_1__split = _x_buf_1*_y_buf_2_1;
             _x_buf_0__split = _x_buf_0*_y_buf_2_0;
             *(8+_pA_2_0) = -_w_buf_1__split+(-_x_buf_1__split+(_w_buf_0__split+(*(8+_pA_2_0)+_x_buf_0__split)));
             _w_buf_1__split = _w_buf_1*_z_buf_2_0;
             _w_buf_0__split = _w_buf_0*_z_buf_2_1;
             _x_buf_1__split = _x_buf_1*_y_buf_2_0;
             _x_buf_0__split = _x_buf_0*_y_buf_2_1;
             *(9+_pA_2_0) = _w_buf_1__split+(_x_buf_1__split+(_w_buf_0__split+(*(9+_pA_2_0)+_x_buf_0__split)));
             _x_buf_0 = *(10+_pX_0);
             _x_buf_1 = *(11+_pX_0);
             _w_buf_0 = *(W+(10+i));
             _w_buf_1 = *(W+(11+i));
             _w_buf_1__split = _w_buf_1*_z_buf_0_1;
             _w_buf_0__split = _w_buf_0*_z_buf_0_0;
             _x_buf_1__split = _x_buf_1*_y_buf_0_1;
             _x_buf_0__split = _x_buf_0*_y_buf_0_0;
             *(10+_pA_0_0) = -_w_buf_1__split+(-_x_buf_1__split+(_w_buf_0__split+(*(10+_pA_0_0)+_x_buf_0__split)));
             _w_buf_1__split = _w_buf_1*_z_buf_0_0;
             _w_buf_0__split = _w_buf_0*_z_buf_0_1;
             _x_buf_1__split = _x_buf_1*_y_buf_0_0;
             _x_buf_0__split = _x_buf_0*_y_buf_0_1;
             *(11+_pA_0_0) = _w_buf_1__split+(_x_buf_1__split+(_w_buf_0__split+(*(11+_pA_0_0)+_x_buf_0__split)));
             _w_buf_1__split = _w_buf_1*_z_buf_2_1;
             _w_buf_0__split = _w_buf_0*_z_buf_2_0;
             _x_buf_1__split = _x_buf_1*_y_buf_2_1;
             _x_buf_0__split = _x_buf_0*_y_buf_2_0;
             *(10+_pA_2_0) = -_w_buf_1__split+(-_x_buf_1__split+(_w_buf_0__split+(*(10+_pA_2_0)+_x_buf_0__split)));
             _w_buf_1__split = _w_buf_1*_z_buf_2_0;
             _w_buf_0__split = _w_buf_0*_z_buf_2_1;
             _x_buf_1__split = _x_buf_1*_y_buf_2_0;
             _x_buf_0__split = _x_buf_0*_y_buf_2_1;
             *(11+_pA_2_0) = _w_buf_1__split+(_x_buf_1__split+(_w_buf_0__split+(*(11+_pA_2_0)+_x_buf_0__split)));
             _pA_0_0 = _pA_0_0+12;
             _pA_1_0 = _pA_1_0+12;
             _pA_2_0 = _pA_2_0+12;
             _pA_3_0 = _pA_3_0+12;
             _pX_0 = _pX_0+12;
          }
        for (i=i; i<2*M; i+=2) 
          {
             _x_buf_0 = *(X+i);
             _x_buf_1 = *(X+(1+i));
             _w_buf_0 = *(W+i);
             _w_buf_1 = *(W+(1+i));
             _w_buf_1__split = _w_buf_1*_z_buf_0_1;
             _w_buf_0__split = _w_buf_0*_z_buf_0_0;
             _x_buf_1__split = _x_buf_1*_y_buf_0_1;
             _x_buf_0__split = _x_buf_0*_y_buf_0_0;
             *(_pA_0+i) = -_w_buf_1__split+(-_x_buf_1__split+(_w_buf_0__split+(*(_pA_0+i)+_x_buf_0__split)));
             _w_buf_1__split = _w_buf_1*_z_buf_0_0;
             _w_buf_0__split = _w_buf_0*_z_buf_0_1;
             _x_buf_1__split = _x_buf_1*_y_buf_0_0;
             _x_buf_0__split = _x_buf_0*_y_buf_0_1;
             *(_pA_0+(1+i)) = _w_buf_1__split+(_x_buf_1__split+(_w_buf_0__split+(*(_pA_0+(1+i))+_x_buf_0__split)));
             _w_buf_1__split = _w_buf_1*_z_buf_2_1;
             _w_buf_0__split = _w_buf_0*_z_buf_2_0;
             _x_buf_1__split = _x_buf_1*_y_buf_2_1;
             _x_buf_0__split = _x_buf_0*_y_buf_2_0;
             *(_pA_2+i) = -_w_buf_1__split+(-_x_buf_1__split+(_w_buf_0__split+(*(_pA_2+i)+_x_buf_0__split)));
             _w_buf_1__split = _w_buf_1*_z_buf_2_0;
             _w_buf_0__split = _w_buf_0*_z_buf_2_1;
             _x_buf_1__split = _x_buf_1*_y_buf_2_0;
             _x_buf_0__split = _x_buf_0*_y_buf_2_1;
             *(_pA_2+(1+i)) = _w_buf_1__split+(_x_buf_1__split+(_w_buf_0__split+(*(_pA_2+(1+i))+_x_buf_0__split)));
          }
        _pA_0 = _pA_3+lda;
        _pA_1 = _pA_0+lda;
        _pA_2 = _pA_1+lda;
        _pA_3 = _pA_2+lda;
        _pY_0 = _pY_3+incY;
        _pY_1 = _pY_0+incY;
        _pY_2 = _pY_1+incY;
        _pY_3 = _pY_2+incY;
        _prefA_0 = _prefA_0+4*lda;
     }
   for (j=j; j<2*N; j+=2) 
     for (i=0; i<2*M; i+=2) 
       {
          A[j*lda+i] = -W[1+i]*Z[1+j*incZ]+(-X[1+i]*Y[1+j*incY]+(W[i]*Z[j*incZ]+(A[j*lda+i]+X[i]*Y[j*incY])));
          A[1+(j*lda+i)] = W[1+i]*Z[j*incZ]+(X[1+i]*Y[j*incY]+(W[i]*Z[1+j*incZ]+(A[1+(j*lda+i)]+X[i]*Y[1+j*incY])));
       }
}