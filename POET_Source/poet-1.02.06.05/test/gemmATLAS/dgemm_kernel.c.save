#include <atlas_prefetch.h>

#define SSE2
#include <SSE3Dnow.h>
#include <stdlib.h>
void ATL_USERMM(const int M,const int N,const int K,const double alpha,const double* A,const int lda,const double* B,const int ldb,const double beta,double* C,const int ldc) 
{
   int i,j,l;
   double _a_buf_0_0;
   double _b_buf_0_0;
   double _c_buf_0_0;
   double _c_buf_0_1;
   double _c_buf_0_2;
   double _c_buf_0_3;
   double _c_buf_0_4;
   double _c_buf_0_5;
   double _c_buf_0_6;
   double _c_buf_0_7;
   double _c_buf_0_8;
   double _c_buf_0_9;
   double _c_buf_0_10;
   double _c_buf_0_11;
   const double* _pA_0;
   const double* _pA_0_0;
   const double* _pB_0;
   const double* _pB_0_0;
   double* _pC_0;
   double* _pC_0_0;
   const double* _prefA_0;
   _pB_0 = B;
   _pC_0 = C;
   _prefA_0 = 5184+A;
   for (j=0; j<72; j+=1) 
     {
        _pA_0 = A;
        _pC_0_0 = _pC_0;
        for (i=0; i<72; i+=12) 
          {
             ATL_pfl1R(_prefA_0);
             _prefA_0 = 12+_prefA_0;
             vec_splat(&beta,reg0);
             vec_mov_mr_1(_pC_0_0,reg1);
             vec_mov_mr_1(1+_pC_0_0,reg2);
             vec_mov_mr_1(2+_pC_0_0,reg3);
             vec_mov_mr_1(3+_pC_0_0,reg4);
             vec_mov_mr_1(4+_pC_0_0,reg5);
             vec_mov_mr_1(5+_pC_0_0,reg6);
             vec_mov_mr_1(6+_pC_0_0,reg7);
             vec_mov_mr_1(7+_pC_0_0,reg8);
             vec_mov_mr_1(8+_pC_0_0,reg9);
             vec_mov_mr_1(9+_pC_0_0,reg10);
             vec_mov_mr_1(10+_pC_0_0,reg11);
             vec_mov_mr_1(11+_pC_0_0,reg12);
             vec_mul_rr(reg0,reg1);
             vec_mul_rr(reg0,reg2);
             vec_mul_rr(reg0,reg3);
             vec_mul_rr(reg0,reg4);
             vec_mul_rr(reg0,reg5);
             vec_mul_rr(reg0,reg6);
             vec_mul_rr(reg0,reg7);
             vec_mul_rr(reg0,reg8);
             vec_mul_rr(reg0,reg9);
             vec_mul_rr(reg0,reg10);
             vec_mul_rr(reg0,reg11);
             vec_mul_rr(reg0,reg12);
             _pA_0_0 = _pA_0;
             _pB_0_0 = _pB_0;
             vec_mov_mr_a(_pB_0_0,reg13);
             vec_mov_mr_a(_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg1);
             vec_mov_mr_a(72+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg2);
             vec_mov_mr_a(144+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg3);
             vec_mov_mr_a(216+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg4);
             vec_mov_mr_a(288+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg5);
             vec_mov_mr_a(360+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg6);
             vec_mov_mr_a(432+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg7);
             vec_mov_mr_a(504+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg8);
             vec_mov_mr_a(576+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg9);
             vec_mov_mr_a(648+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg10);
             vec_mov_mr_a(720+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg11);
             vec_mov_mr_a(792+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg12);
             _pA_0_0 = 2+_pA_0_0;
             _pB_0_0 = 2+_pB_0_0;
             vec_mov_mr_a(_pB_0_0,reg13);
             vec_mov_mr_a(_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg1);
             vec_mov_mr_a(72+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg2);
             vec_mov_mr_a(144+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg3);
             vec_mov_mr_a(216+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg4);
             vec_mov_mr_a(288+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg5);
             vec_mov_mr_a(360+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg6);
             vec_mov_mr_a(432+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg7);
             vec_mov_mr_a(504+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg8);
             vec_mov_mr_a(576+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg9);
             vec_mov_mr_a(648+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg10);
             vec_mov_mr_a(720+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg11);
             vec_mov_mr_a(792+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg12);
             _pA_0_0 = 2+_pA_0_0;
             _pB_0_0 = 2+_pB_0_0;
             vec_mov_mr_a(_pB_0_0,reg13);
             vec_mov_mr_a(_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg1);
             vec_mov_mr_a(72+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg2);
             vec_mov_mr_a(144+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg3);
             vec_mov_mr_a(216+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg4);
             vec_mov_mr_a(288+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg5);
             vec_mov_mr_a(360+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg6);
             vec_mov_mr_a(432+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg7);
             vec_mov_mr_a(504+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg8);
             vec_mov_mr_a(576+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg9);
             vec_mov_mr_a(648+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg10);
             vec_mov_mr_a(720+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg11);
             vec_mov_mr_a(792+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg12);
             _pA_0_0 = 2+_pA_0_0;
             _pB_0_0 = 2+_pB_0_0;
             vec_mov_mr_a(_pB_0_0,reg13);
             vec_mov_mr_a(_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg1);
             vec_mov_mr_a(72+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg2);
             vec_mov_mr_a(144+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg3);
             vec_mov_mr_a(216+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg4);
             vec_mov_mr_a(288+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg5);
             vec_mov_mr_a(360+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg6);
             vec_mov_mr_a(432+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg7);
             vec_mov_mr_a(504+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg8);
             vec_mov_mr_a(576+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg9);
             vec_mov_mr_a(648+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg10);
             vec_mov_mr_a(720+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg11);
             vec_mov_mr_a(792+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg12);
             _pA_0_0 = 2+_pA_0_0;
             _pB_0_0 = 2+_pB_0_0;
             vec_mov_mr_a(_pB_0_0,reg13);
             vec_mov_mr_a(_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg1);
             vec_mov_mr_a(72+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg2);
             vec_mov_mr_a(144+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg3);
             vec_mov_mr_a(216+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg4);
             vec_mov_mr_a(288+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg5);
             vec_mov_mr_a(360+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg6);
             vec_mov_mr_a(432+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg7);
             vec_mov_mr_a(504+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg8);
             vec_mov_mr_a(576+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg9);
             vec_mov_mr_a(648+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg10);
             vec_mov_mr_a(720+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg11);
             vec_mov_mr_a(792+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg12);
             _pA_0_0 = 2+_pA_0_0;
             _pB_0_0 = 2+_pB_0_0;
             vec_mov_mr_a(_pB_0_0,reg13);
             vec_mov_mr_a(_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg1);
             vec_mov_mr_a(72+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg2);
             vec_mov_mr_a(144+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg3);
             vec_mov_mr_a(216+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg4);
             vec_mov_mr_a(288+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg5);
             vec_mov_mr_a(360+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg6);
             vec_mov_mr_a(432+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg7);
             vec_mov_mr_a(504+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg8);
             vec_mov_mr_a(576+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg9);
             vec_mov_mr_a(648+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg10);
             vec_mov_mr_a(720+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg11);
             vec_mov_mr_a(792+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg12);
             _pA_0_0 = 2+_pA_0_0;
             _pB_0_0 = 2+_pB_0_0;
             vec_mov_mr_a(_pB_0_0,reg13);
             vec_mov_mr_a(_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg1);
             vec_mov_mr_a(72+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg2);
             vec_mov_mr_a(144+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg3);
             vec_mov_mr_a(216+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg4);
             vec_mov_mr_a(288+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg5);
             vec_mov_mr_a(360+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg6);
             vec_mov_mr_a(432+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg7);
             vec_mov_mr_a(504+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg8);
             vec_mov_mr_a(576+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg9);
             vec_mov_mr_a(648+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg10);
             vec_mov_mr_a(720+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg11);
             vec_mov_mr_a(792+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg12);
             _pA_0_0 = 2+_pA_0_0;
             _pB_0_0 = 2+_pB_0_0;
             vec_mov_mr_a(_pB_0_0,reg13);
             vec_mov_mr_a(_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg1);
             vec_mov_mr_a(72+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg2);
             vec_mov_mr_a(144+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg3);
             vec_mov_mr_a(216+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg4);
             vec_mov_mr_a(288+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg5);
             vec_mov_mr_a(360+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg6);
             vec_mov_mr_a(432+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg7);
             vec_mov_mr_a(504+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg8);
             vec_mov_mr_a(576+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg9);
             vec_mov_mr_a(648+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg10);
             vec_mov_mr_a(720+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg11);
             vec_mov_mr_a(792+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg12);
             _pA_0_0 = 2+_pA_0_0;
             _pB_0_0 = 2+_pB_0_0;
             vec_mov_mr_a(_pB_0_0,reg13);
             vec_mov_mr_a(_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg1);
             vec_mov_mr_a(72+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg2);
             vec_mov_mr_a(144+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg3);
             vec_mov_mr_a(216+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg4);
             vec_mov_mr_a(288+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg5);
             vec_mov_mr_a(360+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg6);
             vec_mov_mr_a(432+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg7);
             vec_mov_mr_a(504+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg8);
             vec_mov_mr_a(576+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg9);
             vec_mov_mr_a(648+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg10);
             vec_mov_mr_a(720+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg11);
             vec_mov_mr_a(792+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg12);
             _pA_0_0 = 2+_pA_0_0;
             _pB_0_0 = 2+_pB_0_0;
             vec_mov_mr_a(_pB_0_0,reg13);
             vec_mov_mr_a(_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg1);
             vec_mov_mr_a(72+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg2);
             vec_mov_mr_a(144+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg3);
             vec_mov_mr_a(216+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg4);
             vec_mov_mr_a(288+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg5);
             vec_mov_mr_a(360+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg6);
             vec_mov_mr_a(432+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg7);
             vec_mov_mr_a(504+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg8);
             vec_mov_mr_a(576+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg9);
             vec_mov_mr_a(648+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg10);
             vec_mov_mr_a(720+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg11);
             vec_mov_mr_a(792+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg12);
             _pA_0_0 = 2+_pA_0_0;
             _pB_0_0 = 2+_pB_0_0;
             vec_mov_mr_a(_pB_0_0,reg13);
             vec_mov_mr_a(_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg1);
             vec_mov_mr_a(72+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg2);
             vec_mov_mr_a(144+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg3);
             vec_mov_mr_a(216+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg4);
             vec_mov_mr_a(288+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg5);
             vec_mov_mr_a(360+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg6);
             vec_mov_mr_a(432+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg7);
             vec_mov_mr_a(504+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg8);
             vec_mov_mr_a(576+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg9);
             vec_mov_mr_a(648+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg10);
             vec_mov_mr_a(720+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg11);
             vec_mov_mr_a(792+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg12);
             _pA_0_0 = 2+_pA_0_0;
             _pB_0_0 = 2+_pB_0_0;
             vec_mov_mr_a(_pB_0_0,reg13);
             vec_mov_mr_a(_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg1);
             vec_mov_mr_a(72+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg2);
             vec_mov_mr_a(144+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg3);
             vec_mov_mr_a(216+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg4);
             vec_mov_mr_a(288+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg5);
             vec_mov_mr_a(360+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg6);
             vec_mov_mr_a(432+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg7);
             vec_mov_mr_a(504+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg8);
             vec_mov_mr_a(576+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg9);
             vec_mov_mr_a(648+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg10);
             vec_mov_mr_a(720+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg11);
             vec_mov_mr_a(792+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg12);
             _pA_0_0 = 2+_pA_0_0;
             _pB_0_0 = 2+_pB_0_0;
             vec_mov_mr_a(_pB_0_0,reg13);
             vec_mov_mr_a(_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg1);
             vec_mov_mr_a(72+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg2);
             vec_mov_mr_a(144+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg3);
             vec_mov_mr_a(216+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg4);
             vec_mov_mr_a(288+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg5);
             vec_mov_mr_a(360+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg6);
             vec_mov_mr_a(432+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg7);
             vec_mov_mr_a(504+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg8);
             vec_mov_mr_a(576+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg9);
             vec_mov_mr_a(648+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg10);
             vec_mov_mr_a(720+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg11);
             vec_mov_mr_a(792+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg12);
             _pA_0_0 = 2+_pA_0_0;
             _pB_0_0 = 2+_pB_0_0;
             vec_mov_mr_a(_pB_0_0,reg13);
             vec_mov_mr_a(_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg1);
             vec_mov_mr_a(72+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg2);
             vec_mov_mr_a(144+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg3);
             vec_mov_mr_a(216+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg4);
             vec_mov_mr_a(288+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg5);
             vec_mov_mr_a(360+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg6);
             vec_mov_mr_a(432+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg7);
             vec_mov_mr_a(504+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg8);
             vec_mov_mr_a(576+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg9);
             vec_mov_mr_a(648+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg10);
             vec_mov_mr_a(720+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg11);
             vec_mov_mr_a(792+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg12);
             _pA_0_0 = 2+_pA_0_0;
             _pB_0_0 = 2+_pB_0_0;
             vec_mov_mr_a(_pB_0_0,reg13);
             vec_mov_mr_a(_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg1);
             vec_mov_mr_a(72+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg2);
             vec_mov_mr_a(144+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg3);
             vec_mov_mr_a(216+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg4);
             vec_mov_mr_a(288+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg5);
             vec_mov_mr_a(360+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg6);
             vec_mov_mr_a(432+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg7);
             vec_mov_mr_a(504+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg8);
             vec_mov_mr_a(576+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg9);
             vec_mov_mr_a(648+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg10);
             vec_mov_mr_a(720+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg11);
             vec_mov_mr_a(792+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg12);
             _pA_0_0 = 2+_pA_0_0;
             _pB_0_0 = 2+_pB_0_0;
             vec_mov_mr_a(_pB_0_0,reg13);
             vec_mov_mr_a(_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg1);
             vec_mov_mr_a(72+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg2);
             vec_mov_mr_a(144+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg3);
             vec_mov_mr_a(216+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg4);
             vec_mov_mr_a(288+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg5);
             vec_mov_mr_a(360+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg6);
             vec_mov_mr_a(432+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg7);
             vec_mov_mr_a(504+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg8);
             vec_mov_mr_a(576+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg9);
             vec_mov_mr_a(648+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg10);
             vec_mov_mr_a(720+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg11);
             vec_mov_mr_a(792+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg12);
             _pA_0_0 = 2+_pA_0_0;
             _pB_0_0 = 2+_pB_0_0;
             vec_mov_mr_a(_pB_0_0,reg13);
             vec_mov_mr_a(_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg1);
             vec_mov_mr_a(72+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg2);
             vec_mov_mr_a(144+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg3);
             vec_mov_mr_a(216+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg4);
             vec_mov_mr_a(288+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg5);
             vec_mov_mr_a(360+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg6);
             vec_mov_mr_a(432+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg7);
             vec_mov_mr_a(504+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg8);
             vec_mov_mr_a(576+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg9);
             vec_mov_mr_a(648+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg10);
             vec_mov_mr_a(720+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg11);
             vec_mov_mr_a(792+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg12);
             _pA_0_0 = 2+_pA_0_0;
             _pB_0_0 = 2+_pB_0_0;
             vec_mov_mr_a(_pB_0_0,reg13);
             vec_mov_mr_a(_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg1);
             vec_mov_mr_a(72+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg2);
             vec_mov_mr_a(144+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg3);
             vec_mov_mr_a(216+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg4);
             vec_mov_mr_a(288+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg5);
             vec_mov_mr_a(360+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg6);
             vec_mov_mr_a(432+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg7);
             vec_mov_mr_a(504+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg8);
             vec_mov_mr_a(576+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg9);
             vec_mov_mr_a(648+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg10);
             vec_mov_mr_a(720+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg11);
             vec_mov_mr_a(792+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg12);
             _pA_0_0 = 2+_pA_0_0;
             _pB_0_0 = 2+_pB_0_0;
             vec_mov_mr_a(_pB_0_0,reg13);
             vec_mov_mr_a(_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg1);
             vec_mov_mr_a(72+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg2);
             vec_mov_mr_a(144+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg3);
             vec_mov_mr_a(216+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg4);
             vec_mov_mr_a(288+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg5);
             vec_mov_mr_a(360+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg6);
             vec_mov_mr_a(432+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg7);
             vec_mov_mr_a(504+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg8);
             vec_mov_mr_a(576+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg9);
             vec_mov_mr_a(648+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg10);
             vec_mov_mr_a(720+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg11);
             vec_mov_mr_a(792+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg12);
             _pA_0_0 = 2+_pA_0_0;
             _pB_0_0 = 2+_pB_0_0;
             vec_mov_mr_a(_pB_0_0,reg13);
             vec_mov_mr_a(_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg1);
             vec_mov_mr_a(72+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg2);
             vec_mov_mr_a(144+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg3);
             vec_mov_mr_a(216+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg4);
             vec_mov_mr_a(288+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg5);
             vec_mov_mr_a(360+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg6);
             vec_mov_mr_a(432+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg7);
             vec_mov_mr_a(504+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg8);
             vec_mov_mr_a(576+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg9);
             vec_mov_mr_a(648+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg10);
             vec_mov_mr_a(720+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg11);
             vec_mov_mr_a(792+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg12);
             _pA_0_0 = 2+_pA_0_0;
             _pB_0_0 = 2+_pB_0_0;
             vec_mov_mr_a(_pB_0_0,reg13);
             vec_mov_mr_a(_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg1);
             vec_mov_mr_a(72+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg2);
             vec_mov_mr_a(144+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg3);
             vec_mov_mr_a(216+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg4);
             vec_mov_mr_a(288+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg5);
             vec_mov_mr_a(360+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg6);
             vec_mov_mr_a(432+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg7);
             vec_mov_mr_a(504+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg8);
             vec_mov_mr_a(576+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg9);
             vec_mov_mr_a(648+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg10);
             vec_mov_mr_a(720+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg11);
             vec_mov_mr_a(792+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg12);
             _pA_0_0 = 2+_pA_0_0;
             _pB_0_0 = 2+_pB_0_0;
             vec_mov_mr_a(_pB_0_0,reg13);
             vec_mov_mr_a(_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg1);
             vec_mov_mr_a(72+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg2);
             vec_mov_mr_a(144+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg3);
             vec_mov_mr_a(216+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg4);
             vec_mov_mr_a(288+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg5);
             vec_mov_mr_a(360+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg6);
             vec_mov_mr_a(432+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg7);
             vec_mov_mr_a(504+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg8);
             vec_mov_mr_a(576+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg9);
             vec_mov_mr_a(648+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg10);
             vec_mov_mr_a(720+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg11);
             vec_mov_mr_a(792+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg12);
             _pA_0_0 = 2+_pA_0_0;
             _pB_0_0 = 2+_pB_0_0;
             vec_mov_mr_a(_pB_0_0,reg13);
             vec_mov_mr_a(_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg1);
             vec_mov_mr_a(72+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg2);
             vec_mov_mr_a(144+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg3);
             vec_mov_mr_a(216+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg4);
             vec_mov_mr_a(288+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg5);
             vec_mov_mr_a(360+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg6);
             vec_mov_mr_a(432+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg7);
             vec_mov_mr_a(504+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg8);
             vec_mov_mr_a(576+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg9);
             vec_mov_mr_a(648+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg10);
             vec_mov_mr_a(720+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg11);
             vec_mov_mr_a(792+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg12);
             _pA_0_0 = 2+_pA_0_0;
             _pB_0_0 = 2+_pB_0_0;
             vec_mov_mr_a(_pB_0_0,reg13);
             vec_mov_mr_a(_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg1);
             vec_mov_mr_a(72+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg2);
             vec_mov_mr_a(144+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg3);
             vec_mov_mr_a(216+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg4);
             vec_mov_mr_a(288+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg5);
             vec_mov_mr_a(360+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg6);
             vec_mov_mr_a(432+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg7);
             vec_mov_mr_a(504+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg8);
             vec_mov_mr_a(576+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg9);
             vec_mov_mr_a(648+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg10);
             vec_mov_mr_a(720+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg11);
             vec_mov_mr_a(792+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg12);
             _pA_0_0 = 2+_pA_0_0;
             _pB_0_0 = 2+_pB_0_0;
             vec_mov_mr_a(_pB_0_0,reg13);
             vec_mov_mr_a(_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg1);
             vec_mov_mr_a(72+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg2);
             vec_mov_mr_a(144+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg3);
             vec_mov_mr_a(216+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg4);
             vec_mov_mr_a(288+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg5);
             vec_mov_mr_a(360+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg6);
             vec_mov_mr_a(432+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg7);
             vec_mov_mr_a(504+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg8);
             vec_mov_mr_a(576+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg9);
             vec_mov_mr_a(648+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg10);
             vec_mov_mr_a(720+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg11);
             vec_mov_mr_a(792+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg12);
             _pA_0_0 = 2+_pA_0_0;
             _pB_0_0 = 2+_pB_0_0;
             vec_mov_mr_a(_pB_0_0,reg13);
             vec_mov_mr_a(_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg1);
             vec_mov_mr_a(72+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg2);
             vec_mov_mr_a(144+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg3);
             vec_mov_mr_a(216+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg4);
             vec_mov_mr_a(288+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg5);
             vec_mov_mr_a(360+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg6);
             vec_mov_mr_a(432+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg7);
             vec_mov_mr_a(504+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg8);
             vec_mov_mr_a(576+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg9);
             vec_mov_mr_a(648+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg10);
             vec_mov_mr_a(720+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg11);
             vec_mov_mr_a(792+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg12);
             _pA_0_0 = 2+_pA_0_0;
             _pB_0_0 = 2+_pB_0_0;
             vec_mov_mr_a(_pB_0_0,reg13);
             vec_mov_mr_a(_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg1);
             vec_mov_mr_a(72+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg2);
             vec_mov_mr_a(144+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg3);
             vec_mov_mr_a(216+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg4);
             vec_mov_mr_a(288+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg5);
             vec_mov_mr_a(360+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg6);
             vec_mov_mr_a(432+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg7);
             vec_mov_mr_a(504+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg8);
             vec_mov_mr_a(576+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg9);
             vec_mov_mr_a(648+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg10);
             vec_mov_mr_a(720+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg11);
             vec_mov_mr_a(792+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg12);
             _pA_0_0 = 2+_pA_0_0;
             _pB_0_0 = 2+_pB_0_0;
             vec_mov_mr_a(_pB_0_0,reg13);
             vec_mov_mr_a(_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg1);
             vec_mov_mr_a(72+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg2);
             vec_mov_mr_a(144+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg3);
             vec_mov_mr_a(216+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg4);
             vec_mov_mr_a(288+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg5);
             vec_mov_mr_a(360+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg6);
             vec_mov_mr_a(432+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg7);
             vec_mov_mr_a(504+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg8);
             vec_mov_mr_a(576+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg9);
             vec_mov_mr_a(648+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg10);
             vec_mov_mr_a(720+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg11);
             vec_mov_mr_a(792+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg12);
             _pA_0_0 = 2+_pA_0_0;
             _pB_0_0 = 2+_pB_0_0;
             vec_mov_mr_a(_pB_0_0,reg13);
             vec_mov_mr_a(_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg1);
             vec_mov_mr_a(72+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg2);
             vec_mov_mr_a(144+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg3);
             vec_mov_mr_a(216+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg4);
             vec_mov_mr_a(288+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg5);
             vec_mov_mr_a(360+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg6);
             vec_mov_mr_a(432+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg7);
             vec_mov_mr_a(504+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg8);
             vec_mov_mr_a(576+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg9);
             vec_mov_mr_a(648+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg10);
             vec_mov_mr_a(720+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg11);
             vec_mov_mr_a(792+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg12);
             _pA_0_0 = 2+_pA_0_0;
             _pB_0_0 = 2+_pB_0_0;
             vec_mov_mr_a(_pB_0_0,reg13);
             vec_mov_mr_a(_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg1);
             vec_mov_mr_a(72+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg2);
             vec_mov_mr_a(144+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg3);
             vec_mov_mr_a(216+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg4);
             vec_mov_mr_a(288+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg5);
             vec_mov_mr_a(360+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg6);
             vec_mov_mr_a(432+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg7);
             vec_mov_mr_a(504+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg8);
             vec_mov_mr_a(576+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg9);
             vec_mov_mr_a(648+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg10);
             vec_mov_mr_a(720+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg11);
             vec_mov_mr_a(792+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg12);
             _pA_0_0 = 2+_pA_0_0;
             _pB_0_0 = 2+_pB_0_0;
             vec_mov_mr_a(_pB_0_0,reg13);
             vec_mov_mr_a(_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg1);
             vec_mov_mr_a(72+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg2);
             vec_mov_mr_a(144+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg3);
             vec_mov_mr_a(216+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg4);
             vec_mov_mr_a(288+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg5);
             vec_mov_mr_a(360+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg6);
             vec_mov_mr_a(432+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg7);
             vec_mov_mr_a(504+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg8);
             vec_mov_mr_a(576+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg9);
             vec_mov_mr_a(648+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg10);
             vec_mov_mr_a(720+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg11);
             vec_mov_mr_a(792+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg12);
             _pA_0_0 = 2+_pA_0_0;
             _pB_0_0 = 2+_pB_0_0;
             vec_mov_mr_a(_pB_0_0,reg13);
             vec_mov_mr_a(_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg1);
             vec_mov_mr_a(72+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg2);
             vec_mov_mr_a(144+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg3);
             vec_mov_mr_a(216+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg4);
             vec_mov_mr_a(288+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg5);
             vec_mov_mr_a(360+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg6);
             vec_mov_mr_a(432+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg7);
             vec_mov_mr_a(504+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg8);
             vec_mov_mr_a(576+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg9);
             vec_mov_mr_a(648+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg10);
             vec_mov_mr_a(720+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg11);
             vec_mov_mr_a(792+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg12);
             _pA_0_0 = 2+_pA_0_0;
             _pB_0_0 = 2+_pB_0_0;
             vec_mov_mr_a(_pB_0_0,reg13);
             vec_mov_mr_a(_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg1);
             vec_mov_mr_a(72+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg2);
             vec_mov_mr_a(144+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg3);
             vec_mov_mr_a(216+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg4);
             vec_mov_mr_a(288+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg5);
             vec_mov_mr_a(360+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg6);
             vec_mov_mr_a(432+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg7);
             vec_mov_mr_a(504+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg8);
             vec_mov_mr_a(576+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg9);
             vec_mov_mr_a(648+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg10);
             vec_mov_mr_a(720+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg11);
             vec_mov_mr_a(792+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg12);
             _pA_0_0 = 2+_pA_0_0;
             _pB_0_0 = 2+_pB_0_0;
             vec_mov_mr_a(_pB_0_0,reg13);
             vec_mov_mr_a(_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg1);
             vec_mov_mr_a(72+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg2);
             vec_mov_mr_a(144+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg3);
             vec_mov_mr_a(216+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg4);
             vec_mov_mr_a(288+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg5);
             vec_mov_mr_a(360+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg6);
             vec_mov_mr_a(432+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg7);
             vec_mov_mr_a(504+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg8);
             vec_mov_mr_a(576+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg9);
             vec_mov_mr_a(648+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg10);
             vec_mov_mr_a(720+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg11);
             vec_mov_mr_a(792+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg12);
             _pA_0_0 = 2+_pA_0_0;
             _pB_0_0 = 2+_pB_0_0;
             vec_mov_mr_a(_pB_0_0,reg13);
             vec_mov_mr_a(_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg1);
             vec_mov_mr_a(72+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg2);
             vec_mov_mr_a(144+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg3);
             vec_mov_mr_a(216+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg4);
             vec_mov_mr_a(288+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg5);
             vec_mov_mr_a(360+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg6);
             vec_mov_mr_a(432+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg7);
             vec_mov_mr_a(504+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg8);
             vec_mov_mr_a(576+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg9);
             vec_mov_mr_a(648+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg10);
             vec_mov_mr_a(720+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg11);
             vec_mov_mr_a(792+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg12);
             _pA_0_0 = 2+_pA_0_0;
             _pB_0_0 = 2+_pB_0_0;
             vec_mov_mr_a(_pB_0_0,reg13);
             vec_mov_mr_a(_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg1);
             vec_mov_mr_a(72+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg2);
             vec_mov_mr_a(144+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg3);
             vec_mov_mr_a(216+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg4);
             vec_mov_mr_a(288+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg5);
             vec_mov_mr_a(360+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg6);
             vec_mov_mr_a(432+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg7);
             vec_mov_mr_a(504+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg8);
             vec_mov_mr_a(576+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg9);
             vec_mov_mr_a(648+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg10);
             vec_mov_mr_a(720+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg11);
             vec_mov_mr_a(792+_pA_0_0,reg0);
             vec_mul_rr(reg13,reg0);
             vec_add_rr(reg0,reg12);
             _pA_0_0 = 2+_pA_0_0;
             _pB_0_0 = 2+_pB_0_0;
             vec_red(reg1,reg14);
             vec_mov_rm_1(reg1,_pC_0_0);
             vec_red(reg2,reg14);
             vec_mov_rm_1(reg2,1+_pC_0_0);
             vec_red(reg3,reg14);
             vec_mov_rm_1(reg3,2+_pC_0_0);
             vec_red(reg4,reg14);
             vec_mov_rm_1(reg4,3+_pC_0_0);
             vec_red(reg5,reg14);
             vec_mov_rm_1(reg5,4+_pC_0_0);
             vec_red(reg6,reg14);
             vec_mov_rm_1(reg6,5+_pC_0_0);
             vec_red(reg7,reg14);
             vec_mov_rm_1(reg7,6+_pC_0_0);
             vec_red(reg8,reg14);
             vec_mov_rm_1(reg8,7+_pC_0_0);
             vec_red(reg9,reg14);
             vec_mov_rm_1(reg9,8+_pC_0_0);
             vec_red(reg10,reg14);
             vec_mov_rm_1(reg10,9+_pC_0_0);
             vec_red(reg11,reg14);
             vec_mov_rm_1(reg11,10+_pC_0_0);
             vec_red(reg12,reg14);
             vec_mov_rm_1(reg12,11+_pC_0_0);
             _pA_0 = _pA_0+864;
             _pC_0_0 = _pC_0_0+12;
          }
        _pB_0 = _pB_0+72;
        _pC_0 = _pC_0+ldc;
     }
}