#include <omp.h>
void dgemvT(const int M,const int N,const double alpha,const double* A,const int lda,const double* X,const int incX,const double beta,double* Y,const int incY) 
{
   int i;
   int j;
   int i_par;
   int j_bk;
   int i_bk;
   double* _Y_buf_fd_0;
   double _Y_1_scalar_0;
   double _Y_1_scalar_1;
   double* _Y_1_scalar_fd_0;
   double _X_2_scalar_0;
   double* _X_2_scalar_fd_0;
   omp_set_num_threads(2);
   #pragma omp  parallel  
    {
    #pragma omp  for private(_X_2_scalar_fd_0,_X_2_scalar_0,_Y_1_scalar_fd_0,_Y_1_scalar_0,_Y_1_scalar_1,_Y_buf_fd_0,j_bk,i_bk,j,i_par,i)
    for (i_par=0; i_par<M; i_par+=256) 
      {
         _Y_buf_fd_0 = Y;
         for (i_bk=0; i_bk<((M+-i_par < 256)? M+-i_par : 256); i_bk+=16) 
           {
              for (j_bk=0; j_bk<N; j_bk+=16) 
                {
                   _Y_1_scalar_fd_0 = _Y_buf_fd_0;
                   for (i=0; i<-1+((((M+-i_par < 256)? M+-i_par : 256)+-i_bk < 16)? ((M+-i_par < 256)? M+-i_par : 256)+-i_bk : 16); i+=2) 
                     {
                        _Y_1_scalar_0 = _Y_1_scalar_fd_0[i_par];
                        _Y_1_scalar_1 = _Y_1_scalar_fd_0[1+i_par];
                        _X_2_scalar_fd_0 = X;
                        for (j=0; j<-3+((N+-j_bk < 16)? N+-j_bk : 16); j+=4) 
                          {
                             _X_2_scalar_0 = _X_2_scalar_fd_0[j_bk];
                             if (0==j)  
                               _Y_1_scalar_0 = beta*_Y_1_scalar_0;
                             _Y_1_scalar_0 = _Y_1_scalar_0+A[j+(j_bk+(i_par*lda+(i_bk*lda+i*lda)))]*_X_2_scalar_0;
                             if (0==j)  
                               _Y_1_scalar_1 = beta*_Y_1_scalar_1;
                             _Y_1_scalar_1 = _Y_1_scalar_1+A[j+(j_bk+(i_par*lda+(i_bk*lda+(lda+i*lda))))]*_X_2_scalar_0;
                             _X_2_scalar_fd_0 = 1+_X_2_scalar_fd_0;
                             _X_2_scalar_0 = _X_2_scalar_fd_0[j_bk];
                             _Y_1_scalar_0 = _Y_1_scalar_0+A[i*lda+(i_bk*lda+(i_par*lda+(j_bk+(1+j))))]*_X_2_scalar_0;
                             _Y_1_scalar_1 = _Y_1_scalar_1+A[i*lda+(lda+(i_bk*lda+(i_par*lda+(j_bk+(1+j)))))]*_X_2_scalar_0;
                             _X_2_scalar_fd_0 = 1+_X_2_scalar_fd_0;
                             _X_2_scalar_0 = _X_2_scalar_fd_0[j_bk];
                             _Y_1_scalar_0 = _Y_1_scalar_0+A[i*lda+(i_bk*lda+(i_par*lda+(j_bk+(2+j))))]*_X_2_scalar_0;
                             _Y_1_scalar_1 = _Y_1_scalar_1+A[i*lda+(lda+(i_bk*lda+(i_par*lda+(j_bk+(2+j)))))]*_X_2_scalar_0;
                             _X_2_scalar_fd_0 = 1+_X_2_scalar_fd_0;
                             _X_2_scalar_0 = _X_2_scalar_fd_0[j_bk];
                             _Y_1_scalar_0 = _Y_1_scalar_0+A[i*lda+(i_bk*lda+(i_par*lda+(j_bk+(3+j))))]*_X_2_scalar_0;
                             _Y_1_scalar_1 = _Y_1_scalar_1+A[i*lda+(lda+(i_bk*lda+(i_par*lda+(j_bk+(3+j)))))]*_X_2_scalar_0;
                             _X_2_scalar_fd_0 = 1+_X_2_scalar_fd_0;
                          }
                        if (j<((N+-j_bk < 16)? N+-j_bk : 16))  
                          {
                             _X_2_scalar_0 = _X_2_scalar_fd_0[j_bk];
                             if (0==j)  
                               _Y_1_scalar_0 = beta*_Y_1_scalar_0;
                             _Y_1_scalar_0 = _Y_1_scalar_0+A[j+(j_bk+(i_par*lda+(i_bk*lda+i*lda)))]*_X_2_scalar_0;
                             if (0==j)  
                               _Y_1_scalar_1 = beta*_Y_1_scalar_1;
                             _Y_1_scalar_1 = _Y_1_scalar_1+A[j+(j_bk+(i_par*lda+(i_bk*lda+(lda+i*lda))))]*_X_2_scalar_0;
                             _X_2_scalar_fd_0 = 1+_X_2_scalar_fd_0;
                             if (1+j<((N+-j_bk < 16)? N+-j_bk : 16))  
                               {
                                  _X_2_scalar_0 = _X_2_scalar_fd_0[j_bk];
                                  _Y_1_scalar_0 = _Y_1_scalar_0+A[i*lda+(i_bk*lda+(i_par*lda+(j_bk+(1+j))))]*_X_2_scalar_0;
                                  _Y_1_scalar_1 = _Y_1_scalar_1+A[i*lda+(lda+(i_bk*lda+(i_par*lda+(j_bk+(1+j)))))]*_X_2_scalar_0;
                                  _X_2_scalar_fd_0 = 1+_X_2_scalar_fd_0;
                               }
                             if (2+j<((N+-j_bk < 16)? N+-j_bk : 16))  
                               {
                                  _X_2_scalar_0 = _X_2_scalar_fd_0[j_bk];
                                  _Y_1_scalar_0 = _Y_1_scalar_0+A[i*lda+(i_bk*lda+(i_par*lda+(j_bk+(2+j))))]*_X_2_scalar_0;
                                  _Y_1_scalar_1 = _Y_1_scalar_1+A[i*lda+(lda+(i_bk*lda+(i_par*lda+(j_bk+(2+j)))))]*_X_2_scalar_0;
                                  _X_2_scalar_fd_0 = 1+_X_2_scalar_fd_0;
                               }
                             if (3+j<((N+-j_bk < 16)? N+-j_bk : 16))  
                               {
                                  _X_2_scalar_0 = _X_2_scalar_fd_0[j_bk];
                                  _Y_1_scalar_0 = _Y_1_scalar_0+A[i*lda+(i_bk*lda+(i_par*lda+(j_bk+(3+j))))]*_X_2_scalar_0;
                                  _Y_1_scalar_1 = _Y_1_scalar_1+A[i*lda+(lda+(i_bk*lda+(i_par*lda+(j_bk+(3+j)))))]*_X_2_scalar_0;
                                  _X_2_scalar_fd_0 = 1+_X_2_scalar_fd_0;
                               }
                          }
                        _Y_1_scalar_fd_0[i_par] = _Y_1_scalar_0;
                        _Y_1_scalar_fd_0[1+i_par] = _Y_1_scalar_1;
                        _Y_1_scalar_fd_0 = 2+_Y_1_scalar_fd_0;
                     }
                   if (i<((((M+-i_par < 256)? M+-i_par : 256)+-i_bk < 16)? ((M+-i_par < 256)? M+-i_par : 256)+-i_bk : 16))  
                     {
                        _Y_1_scalar_0 = _Y_1_scalar_fd_0[i_par];
                        _Y_1_scalar_1 = _Y_1_scalar_fd_0[1+i_par];
                        _X_2_scalar_fd_0 = X;
                        for (j=0; j<-3+((N+-j_bk < 16)? N+-j_bk : 16); j+=4) 
                          {
                             _X_2_scalar_0 = _X_2_scalar_fd_0[j_bk];
                             if (0==j)  
                               _Y_1_scalar_0 = beta*_Y_1_scalar_0;
                             _Y_1_scalar_0 = _Y_1_scalar_0+A[j+(j_bk+(i_par*lda+(i_bk*lda+i*lda)))]*_X_2_scalar_0;
                             if (1+i<((((M+-i_par < 256)? M+-i_par : 256)+-i_bk < 16)? ((M+-i_par < 256)? M+-i_par : 256)+-i_bk : 16))  
                               {
                                  if (0==j)  
                                    _Y_1_scalar_1 = beta*_Y_1_scalar_1;
                                  _Y_1_scalar_1 = _Y_1_scalar_1+A[j+(j_bk+(i_par*lda+(i_bk*lda+(lda+i*lda))))]*_X_2_scalar_0;
                               }
                             _X_2_scalar_fd_0 = 1+_X_2_scalar_fd_0;
                             _X_2_scalar_0 = _X_2_scalar_fd_0[j_bk];
                             _Y_1_scalar_0 = _Y_1_scalar_0+A[i*lda+(i_bk*lda+(i_par*lda+(j_bk+(1+j))))]*_X_2_scalar_0;
                             if (1+i<((((M+-i_par < 256)? M+-i_par : 256)+-i_bk < 16)? ((M+-i_par < 256)? M+-i_par : 256)+-i_bk : 16))  
                               _Y_1_scalar_1 = _Y_1_scalar_1+A[i*lda+(lda+(i_bk*lda+(i_par*lda+(j_bk+(1+j)))))]*_X_2_scalar_0;
                             _X_2_scalar_fd_0 = 1+_X_2_scalar_fd_0;
                             _X_2_scalar_0 = _X_2_scalar_fd_0[j_bk];
                             _Y_1_scalar_0 = _Y_1_scalar_0+A[i*lda+(i_bk*lda+(i_par*lda+(j_bk+(2+j))))]*_X_2_scalar_0;
                             if (1+i<((((M+-i_par < 256)? M+-i_par : 256)+-i_bk < 16)? ((M+-i_par < 256)? M+-i_par : 256)+-i_bk : 16))  
                               _Y_1_scalar_1 = _Y_1_scalar_1+A[i*lda+(lda+(i_bk*lda+(i_par*lda+(j_bk+(2+j)))))]*_X_2_scalar_0;
                             _X_2_scalar_fd_0 = 1+_X_2_scalar_fd_0;
                             _X_2_scalar_0 = _X_2_scalar_fd_0[j_bk];
                             _Y_1_scalar_0 = _Y_1_scalar_0+A[i*lda+(i_bk*lda+(i_par*lda+(j_bk+(3+j))))]*_X_2_scalar_0;
                             if (1+i<((((M+-i_par < 256)? M+-i_par : 256)+-i_bk < 16)? ((M+-i_par < 256)? M+-i_par : 256)+-i_bk : 16))  
                               _Y_1_scalar_1 = _Y_1_scalar_1+A[i*lda+(lda+(i_bk*lda+(i_par*lda+(j_bk+(3+j)))))]*_X_2_scalar_0;
                             _X_2_scalar_fd_0 = 1+_X_2_scalar_fd_0;
                          }
                        if (j<((N+-j_bk < 16)? N+-j_bk : 16))  
                          {
                             _X_2_scalar_0 = _X_2_scalar_fd_0[j_bk];
                             if (0==j)  
                               _Y_1_scalar_0 = beta*_Y_1_scalar_0;
                             _Y_1_scalar_0 = _Y_1_scalar_0+A[j+(j_bk+(i_par*lda+(i_bk*lda+i*lda)))]*_X_2_scalar_0;
                             if (1+i<((((M+-i_par < 256)? M+-i_par : 256)+-i_bk < 16)? ((M+-i_par < 256)? M+-i_par : 256)+-i_bk : 16))  
                               {
                                  if (0==j)  
                                    _Y_1_scalar_1 = beta*_Y_1_scalar_1;
                                  _Y_1_scalar_1 = _Y_1_scalar_1+A[j+(j_bk+(i_par*lda+(i_bk*lda+(lda+i*lda))))]*_X_2_scalar_0;
                               }
                             _X_2_scalar_fd_0 = 1+_X_2_scalar_fd_0;
                             if (1+j<((N+-j_bk < 16)? N+-j_bk : 16))  
                               {
                                  _X_2_scalar_0 = _X_2_scalar_fd_0[j_bk];
                                  _Y_1_scalar_0 = _Y_1_scalar_0+A[i*lda+(i_bk*lda+(i_par*lda+(j_bk+(1+j))))]*_X_2_scalar_0;
                                  if (1+i<((((M+-i_par < 256)? M+-i_par : 256)+-i_bk < 16)? ((M+-i_par < 256)? M+-i_par : 256)+-i_bk : 16))  
                                    _Y_1_scalar_1 = _Y_1_scalar_1+A[i*lda+(lda+(i_bk*lda+(i_par*lda+(j_bk+(1+j)))))]*_X_2_scalar_0;
                                  _X_2_scalar_fd_0 = 1+_X_2_scalar_fd_0;
                               }
                             if (2+j<((N+-j_bk < 16)? N+-j_bk : 16))  
                               {
                                  _X_2_scalar_0 = _X_2_scalar_fd_0[j_bk];
                                  _Y_1_scalar_0 = _Y_1_scalar_0+A[i*lda+(i_bk*lda+(i_par*lda+(j_bk+(2+j))))]*_X_2_scalar_0;
                                  if (1+i<((((M+-i_par < 256)? M+-i_par : 256)+-i_bk < 16)? ((M+-i_par < 256)? M+-i_par : 256)+-i_bk : 16))  
                                    _Y_1_scalar_1 = _Y_1_scalar_1+A[i*lda+(lda+(i_bk*lda+(i_par*lda+(j_bk+(2+j)))))]*_X_2_scalar_0;
                                  _X_2_scalar_fd_0 = 1+_X_2_scalar_fd_0;
                               }
                             if (3+j<((N+-j_bk < 16)? N+-j_bk : 16))  
                               {
                                  _X_2_scalar_0 = _X_2_scalar_fd_0[j_bk];
                                  _Y_1_scalar_0 = _Y_1_scalar_0+A[i*lda+(i_bk*lda+(i_par*lda+(j_bk+(3+j))))]*_X_2_scalar_0;
                                  if (1+i<((((M+-i_par < 256)? M+-i_par : 256)+-i_bk < 16)? ((M+-i_par < 256)? M+-i_par : 256)+-i_bk : 16))  
                                    _Y_1_scalar_1 = _Y_1_scalar_1+A[i*lda+(lda+(i_bk*lda+(i_par*lda+(j_bk+(3+j)))))]*_X_2_scalar_0;
                                  _X_2_scalar_fd_0 = 1+_X_2_scalar_fd_0;
                               }
                          }
                        _Y_1_scalar_fd_0[i_par] = _Y_1_scalar_0;
                        _Y_1_scalar_fd_0[1+i_par] = _Y_1_scalar_1;
                        _Y_1_scalar_fd_0 = 2+_Y_1_scalar_fd_0;
                     }
                }
              _Y_buf_fd_0 = _Y_buf_fd_0+16;
           }
      }
    }
   
}