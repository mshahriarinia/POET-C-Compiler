       PROGRAM MG3XDEMO 
        INTEGER LM, NM, NV, NR, NIT
        PARAMETER( LM=8 )
        PARAMETER( NM=2+2**LM, NV=NM**3 )
        PARAMETER( NR = (8*(NM**3+NM**2+5*NM-23+7*LM))/7 )
        COMMON /X/ U, V, R, A, C, IR, MM
        REAL*8 U(NR),V(NV),R(NR),A(0:3),C(0:3)
        REAL*8 RNM2, RNMU, OLD2, OLDU
        REAL*8 XX
        INTEGER IR(LM), MM(LM)
       INTEGER IT,N
       A(0) = -8.0D0/3.0D0 
        A(1) =  0.0D0 
        A(2) =  1.0D0/6.0D0 
        A(3) =  1.0D0/12.0D0
        C(0) =  -3.0D0/8.0D0
        C(1) =  +1.0D0/32.0D0
        C(2) =  -1.0D0/64.0D0
        C(3) =   0.0D0
        READ *,LMI
        READ *,NIT
        READ *,NTIMES
        N  = 2 + 2**LMI
        WRITE(6,7)N-2,N-2,N-2,NIT
        CALL SETUP(LMI,IR,MM)
        XX = 314159265.D0
        DO 1000 MTIME=1,NTIMES
        CALL ZERO3(U,N,N,N)
        CALL ZRAN3(XX,V,N,N,N)
        CALL RESID(U,V,R,N,A)
        CALL NORM2U3(R,N,N,N,RNM2,RNMU,N,N,N)
             OLD2 = RNM2
             OLDU = RNMU
        DO 20 IT=1,NIT
          CALL MG3P(U,V,R,N,A,C,NV,NR,IR,MM,LMI)
          CALL RESID(U,V,R,N,A)
 20    CONTINUE
          CALL NORM2U3(R,N,N,N,RNM2,RNMU,N,N,N)
          WRITE(6,'(A40)')
          WRITE(6,'(A40)')' IT    L2-NORM(R)         UNIF-NORM(R)'
          WRITE(6,6) 0, OLD2, OLDU
          WRITE(6,6) NIT, RNM2, RNMU
        
 1000   continue
 6     FORMAT( I4, 2E19.12)
 7     FORMAT(/,' KERNEL B:  SOLVING A POISSON PROBLEM ON A ',I3,' BY ',
     *     I3,' BY ',I3,' GRID,',/,' USING ',I1,' MULTIGRID ITERATIONS.'
     *  ,/)
        STOP
        END
        SUBROUTINE MG3P(U,V,R,N,A,C,NV,NR,IR,MM,LM)
        INTEGER N,NV,NR,LM
        REAL*8 U(NR),V(NV),R(NR)
        REAL*8 A(0:3),C(0:3)
        INTEGER IR(LM), MM(LM)
        INTEGER K, J
        DO 50 K= LM, 2, -1
        J=K-1
        CALL RPRJ3(R(IR(K)),MM(K),R(IR(J)),MM(J))
 50    CONTINUE
        K = 1
        CALL ZERO3(U(IR(K)),MM(K),MM(K),MM(K))
        CALL PSINV(R(IR(K)),U(IR(K)),MM(K),C)
        IF( LM .EQ. 2 )GO TO 200
        DO 100 K = 2, LM-1
        J = K-1
        CALL ZERO3(U(IR(K)),MM(K),MM(K),MM(K))
        CALL INTERP(U(IR(J)),MM(J),U(IR(K)),MM(K))
        CALL RESID(U(IR(K)),R(IR(K)),R(IR(K)),MM(K),A)
        CALL PSINV(R(IR(K)),U(IR(K)),MM(K),C)
 100   CONTINUE
 200   CONTINUE
        J = LM - 1
        K = LM
        CALL INTERP(U(IR(J)),MM(J),U,N)
        CALL RESID(U,V,R,N,A)
        CALL PSINV(R,U,N,C)
        RETURN
        END
        SUBROUTINE PSINV(R,U,N,C)
        INTEGER N
        REAL*8 U(N,N,N),R(N,N,N),C(0:3)
       INTEGER I3,I2,I1
       do I3=2, N-1, 1
       do I2=2, N-1, 1
       do I1=2, N-1, 1
       U(I1,I2,I3) = U(I1,I2,I3)+(C(0)*R(I1,I2,I3))+(C(1)*(R(I1-1,I2,I3)
     *  +R(I1+1,I2,I3)+R(I1,I2-1,I3)+R(I1,I2+1,I3)+R(I1,I2,I3-1)+R(I1,I2
     *  ,I3+1)))+(C(2)*(R(I1-1,I2-1,I3)+R(I1+1,I2-1,I3)+R(I1-1,I2+1,I3)+
     *  R(I1+1,I2+1,I3)+R(I1,I2-1,I3-1)+R(I1,I2+1,I3-1)+R(I1,I2-1,I3+1)+
     *  R(I1,I2+1,I3+1)+R(I1-1,I2,I3-1)+R(I1-1,I2,I3+1)+R(I1+1,I2,I3-1)+
     *  R(I1+1,I2,I3+1)))+(C(3)*(R(I1-1,I2-1,I3-1)+R(I1+1,I2-1,I3-1)+R(
     *  I1-1,I2+1,I3-1)+R(I1+1,I2+1,I3-1)+R(I1-1,I2-1,I3+1)+R(I1+1,I2-1,
     *  I3+1)+R(I1-1,I2+1,I3+1)+R(I1+1,I2+1,I3+1)))
       enddo
       enddo
       enddo
 600   continue
       CALL COMM3(U,N)
        WRITE (6,9000) (((U(I1,I2,I3),                  I1=1,N,69), I2=1
     *  ,N,69), I3=1,N,69)
 9000  FORMAT (1X, E15.6)
        RETURN
        END
        SUBROUTINE RESID(U,V,R,N,A)
       INTEGER N
       REAL*8 U(N,N,N),V(N,N,N),R(N,N,N),A(0:3)
        INTEGER I3, I2, I1
       do I3=2, N-1, 1
       do I2=2, N-1, 1
       do I1=2, N-1, 1
       R(I1,I2,I3) = V(I1,I2,I3)-(A(0)*U(I1,I2,I3))-(A(1)*(U(I1-1,I2,I3)
     *  +U(I1+1,I2,I3)+U(I1,I2-1,I3)+U(I1,I2+1,I3)+U(I1,I2,I3-1)+U(I1,I2
     *  ,I3+1)))-(A(2)*(U(I1-1,I2-1,I3)+U(I1+1,I2-1,I3)+U(I1-1,I2+1,I3)+
     *  U(I1+1,I2+1,I3)+U(I1,I2-1,I3-1)+U(I1,I2+1,I3-1)+U(I1,I2-1,I3+1)+
     *  U(I1,I2+1,I3+1)+U(I1-1,I2,I3-1)+U(I1-1,I2,I3+1)+U(I1+1,I2,I3-1)+
     *  U(I1+1,I2,I3+1)))-(A(3)*(U(I1-1,I2-1,I3-1)+U(I1+1,I2-1,I3-1)+U(
     *  I1-1,I2+1,I3-1)+U(I1+1,I2+1,I3-1)+U(I1-1,I2-1,I3+1)+U(I1+1,I2-1,
     *  I3+1)+U(I1-1,I2+1,I3+1)+U(I1+1,I2+1,I3+1)))
       enddo
       enddo
       enddo
 600   continue
       CALL COMM3(R,N)
        RETURN
        END
        SUBROUTINE RPRJ3(R,MK,S,MJ)
        INTEGER MK, MJ
        REAL*8 R(MK,MK,MK), S(MJ,MJ,MJ)
        INTEGER J3, J2, J1, I3, I2, I1
       do J3=2, MJ-1, 1
       I3 = 2*J3-1
       do J2=2, MJ-1, 1
       I2 = 2*J2-1
       do J1=2, MJ-1, 1
       I1 = 2*J1-1
       S(J1,J2,J3) = 0.5D0*R(I1,I2,I3)+(0.25D0*(R(I1-1,I2,I3)+R(I1+1,I2,
     *  I3)+R(I1,I2-1,I3)+R(I1,I2+1,I3)+R(I1,I2,I3-1)+R(I1,I2,I3+1)))+(0
     *  .125D0*(R(I1-1,I2-1,I3)+R(I1+1,I2-1,I3)+R(I1-1,I2+1,I3)+R(I1+1,
     *  I2+1,I3)+R(I1,I2-1,I3-1)+R(I1,I2+1,I3-1)+R(I1,I2-1,I3+1)+R(I1,I2
     *  +1,I3+1)+R(I1-1,I2,I3-1)+R(I1-1,I2,I3+1)+R(I1+1,I2,I3-1)+R(I1+1,
     *  I2,I3+1)))+(0.0625D0*(R(I1-1,I2-1,I3-1)+R(I1+1,I2-1,I3-1)+R(I1-1
     *  ,I2+1,I3-1)+R(I1+1,I2+1,I3-1)+R(I1-1,I2-1,I3+1)+R(I1+1,I2-1,I3+1
     *  )+R(I1-1,I2+1,I3+1)+R(I1+1,I2+1,I3+1)))
       enddo
       enddo
       enddo
 100   continue
       CALL COMM3(S,MJ)
        RETURN
        END
        SUBROUTINE INTERP(Z,M,U,N)
        REAL*8 Z(M,M,M),U(N,N,N)
        INTEGER M, N
        INTEGER I3, I2, I1
       do I3=2, M-1, 1
       do I2=2, M-1, 1
       do I1=2, M-1, 1
       U(2*I1-1,2*I2-1,2*I3-1) = U(2*I1-1,2*I2-1,2*I3-1)+Z(I1,I2,I3)
       enddo
 100    continue

       do I1=2, M-1, 1
       U(2*I1-2,2*I2-1,2*I3-1) = U(2*I1-2,2*I2-1,2*I3-1)+(0.5D0*(Z(I1-1,
     *  I2,I3)+Z(I1,I2,I3)))
       enddo
       enddo
 200    continue

       do I2=2, M-1, 1
       do I1=2, M-1, 1
       U(2*I1-1,2*I2-2,2*I3-1) = U(2*I1-1,2*I2-2,2*I3-1)+(0.5D0*(Z(I1,I2
     *  -1,I3)+Z(I1,I2,I3)))
       enddo
 300    continue

       do I1=2, M-1, 1
       U(2*I1-2,2*I2-2,2*I3-1) = U(2*I1-2,2*I2-2,2*I3-1)+(0.25D0*(Z(I1-1
     *  ,I2-1,I3)+Z(I1-1,I2,I3)+Z(I1,I2-1,I3)+Z(I1,I2,I3)))
       enddo
       enddo
       enddo
 400    continue

       do I3=2, M-1, 1
       do I2=2, M-1, 1
       do I1=2, M-1, 1
       U(2*I1-1,2*I2-1,2*I3-2) = U(2*I1-1,2*I2-1,2*I3-2)+(0.5D0*(Z(I1,I2
     *  ,I3-1)+Z(I1,I2,I3)))
       enddo
 500    continue

       do I1=2, M-1, 1
       U(2*I1-2,2*I2-1,2*I3-2) = U(2*I1-2,2*I2-1,2*I3-2)+(0.25D0*(Z(I1-1
     *  ,I2,I3-1)+Z(I1,I2,I3-1)+Z(I1-1,I2,I3)+Z(I1,I2,I3)))
       enddo
       enddo
 600    continue

       do I2=2, M-1, 1
       do I1=2, M-1, 1
       U(2*I1-1,2*I2-2,2*I3-2) = U(2*I1-1,2*I2-2,2*I3-2)+(0.25D0*(Z(I1,
     *  I2-1,I3-1)+Z(I1,I2,I3-1)+Z(I1,I2-1,I3)+Z(I1,I2,I3)))
       enddo
 700    continue

       do I1=2, M-1, 1
       U(2*I1-2,2*I2-2,2*I3-2) = U(2*I1-2,2*I2-2,2*I3-2)+(0.125D0*(Z(I1-
     *  1,I2-1,I3-1)+Z(I1-1,I2,I3-1)+Z(I1,I2-1,I3-1)+Z(I1,I2,I3-1)+Z(I1-
     *  1,I2-1,I3)+Z(I1-1,I2,I3)+Z(I1,I2-1,I3)+Z(I1,I2,I3)))
       enddo
       enddo
       enddo
 800    continue

       CALL COMM3(U,N)
        RETURN 
        END
        SUBROUTINE COMM3(U,N)
        INTEGER N
        REAL*8 U(N,N,N)
        INTEGER I3, I2, I1
        DO 100 I3=2,N-1
          DO 100 I2=2,N-1
            U(1,I2,I3) = U(N-1,I2,I3)
            U(N,I2,I3) = U( 2, I2,I3)
 100   CONTINUE
        DO 200 I3=2,N-1
          DO 200 I1=1,N
            U(I1,1,I3) = U(I1,N-1,I3)
            U(I1,N,I3) = U(I1, 2, I3)
 200   CONTINUE
        DO 300 I2=1,N
          DO 300 I1=1,N
            U(I1,I2,1) = U(I1,I2,N-1)
            U(I1,I2,N) = U(I1,I2, 2 )
 300   CONTINUE
        RETURN
        END
        SUBROUTINE NORM2U3(R,N1,N2,N3,RNM2,RNMU,NX,NY,NZ)
        INTEGER N1, N2, N3, NX, NY, NZ
        REAL*8 RNM2, RNMU, R(N1,N2,N3)
        REAL*8 S, A
        INTEGER I3, I2, I1
        S=0.0D0
        RNMU = 0.0D0
        DO 100 I3=2,N3-1
           DO 100 I2=2,N2-1
              DO 100 I1=2,N1-1
                 S=S+R(I1,I2,I3)**2
                 A=ABS(R(I1,I2,I3))
                 IF(A.GT.RNMU)RNMU=A
 100   CONTINUE
        RNM2=SQRT(S/FLOAT((NX-2)*(NY-2)*(NZ-2)))
        RETURN
        END
        SUBROUTINE SETUP(LM,IR,MM)
        INTEGER LM, IR(LM), MM(LM)
        INTEGER L, K
          MM(LM) = 2+2**LM
          DO 100 K = LM-1, 1, -1
            MM(K) = 1 + MM(K+1)/2
 100   CONTINUE
              L = LM
              IR(L)=1
              DO 200 K = L-1, 1, -1
              IR(K)=IR(K+1)+MM(K+1)**3
 200   CONTINUE
        RETURN
        END
        SUBROUTINE ZERO3(Z,NX,NY,NZ)
        INTEGER NX,NY,NZ
        REAL*8 Z(NX,NY,NZ)
        INTEGER I1, I2, I3
        DO 100 I3=1,NZ
        DO 100 I2=1,NY
        DO 100 I1=1,NX
 100   Z(I1,I2,I3)=0.0D0
        RETURN
        END
        SUBROUTINE ZRAN3(X,Z,N1,N2,N3)
        INTEGER N1, N2, N3
        REAL*8 Z(N1,N2,N3)
        INTEGER M, I1, I2, I3
        REAL*8 X, A
        PARAMETER( M = 10,  A = 5.D0 ** 13 )
        INTEGER I, J1( M, 0:1 ), J2( M, 0:1 ), J3( M, 0:1 )
          READ(5,*)
       READ(5,9007)(J1(I,0),J2(I,0),J3(I,0),I=1,M)
          READ(5,*)
       READ(5,9007)(J1(I,1),J2(I,1),J3(I,1),I=1,M)
 9007  FORMAT(5(2X,I3,2(1X,I3),1X))
          WRITE(6,*)' NEGATIVE CHARGES AT'
       WRITE(6,7)(J1(I,0),J2(I,0),J3(I,0),I=1,M)
          WRITE(6,*)' POSITIVE CHARGES AT'
       WRITE(6,7)(J1(I,1),J2(I,1),J3(I,1),I=1,M)
 7     FORMAT(5(' (',I3,2(',',I3),')'))
        DO 400 I3=1,N3
        DO 400 I2=1,N2
        DO 400 I1=1,N1
       Z(I1,I2,I3) = 0.0D0
 400   CONTINUE
       DO 500 I=1,M
         Z( J1(I,0), J2(I,0), J3(I,0) ) = -1.0D0
         Z( J1(I,1), J2(I,1), J3(I,1) ) = +1.0D0
 500   CONTINUE
          CALL COMM3(Z,N1)
        RETURN 
        END
       SUBROUTINE BUBBLE( TEN, J1, J2, J3, M, IND )
       REAL*8 TEN( M, 0:1 )
          INTEGER M, IND, J1( M, 0:1 ), J2( M, 0:1 ), J3( M, 0:1 )
       REAL*8 DIR, TEMP
       INTEGER I, JXTEMP
       IF( IND .EQ. 1 )THEN
         DIR = +1.0D0
       ELSE
         DIR = -1.0D0
       ENDIF
       DO 100 I=1,M-1
         IF( DIR*TEN(I,IND) .GT. DIR*TEN(I+1,IND) )THEN
           TEMP = TEN( I+1, IND )
           TEN( I+1, IND ) = TEN( I, IND )
           TEN( I, IND ) = TEMP
           JXTEMP	   = J1( I+1, IND )
           J1( I+1, IND ) = J1( I,   IND )
           J1( I,   IND ) = JXTEMP
           JXTEMP	   = J2( I+1, IND )
           J2( I+1, IND ) = J2( I,   IND )
           J2( I,   IND ) = JXTEMP
           JXTEMP	   = J3( I+1, IND )
           J3( I+1, IND ) = J3( I,   IND )
           J3( I,   IND ) = JXTEMP
         ELSE 
           RETURN
         ENDIF
 100   CONTINUE
       RETURN
       END