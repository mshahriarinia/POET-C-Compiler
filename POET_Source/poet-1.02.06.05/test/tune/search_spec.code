include utils.incl

<define PARSE CODE.CommandList/>

<code CommandList parse=LIST(ParamDecl|_, "\n")/>

<code ParamDecl pars=(param)>
<parameter @param@ />
</code>

<code NumOfThreads pars=(parName:Name,loopNest:Name, defval:INT)>
name=@parName@ loopnest=@loopNest@ opt=ParallelizeLoop config=NumOfThreads default=@defval@
</code>

<code ParBlockFactor pars=(parName:Name, loopNest:Name, defval:LIST(INT,","))>
name=@parName@ loopnest=@loopNest@ opt=ParallelizeLoop config=BlockFactor default=@defval@
</code>

<code IntList parse=LIST(INT,",")/>

<code BlockFactor pars=(parName:Name, loopNest:Name, dim:INT, defval:IntList)>
name=@parName@ loopnest=@loopNest@ opt=BlockLoops config=BlockFactor dim=@dim@ default=@defval@
</code>

<code UnrollJamFactor pars=(parName:Name, loopNest:Name, dim:INT, defval:IntList)>
name=@parName@ loopnest=@loopNest@ opt=UnrollJam config=UnrollJamFactor dim=@dim@ default=@defval@
</code>

<code UnrollFactor pars=(parName:Name, loopNest:Name, defval:INT)>
name=@parName@ loopnest=@loopNest@ opt=UnrollLoops config=UnrollFactor dim=1 default=@defval@
</code>

<code CopyArrayConfig pars=(parName:Name, loopNest:Name, arrayName:Name, defval:INT)>
name=@parName@ loopnest=@loopNest@ opt=CopyArray config=switch arrayName=@arrayName@ enum=0,1,2 default=@defval@
</code>

<code ScalarReplConfig pars=(parName:Name, loopNest:Name, arrayName:Name, defval:INT)>
name=@parName@ loopnest=@loopNest@ opt=ScalarRepl config=switch arrayName=@arrayName@ enum=0,1,2 default=@defval@
</code>
